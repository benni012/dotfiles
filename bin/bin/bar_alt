#!/bin/bash

update_counter=1000

cf="%{F$(xrq *color8)}"
ef="%{F-}"

cb="%{B$(xrq *color5)}"
cb2="%{B$(xrq *color8)}"
eb="%{B-}"

clock() {
	date "+%A, %d.%m.%Y %H:%M"
}

tea() {
	if [ $(pgrep -x tt | wc -l) -ge 1 -o $(atq | wc -l) -ge 1 ]; then
		echo "%{F$(xrq *color14)}"
	else
		echo "$cf"
	fi
}

volume() {
	level=$(vol level)
	state=$(vol state)
	if [ "$state" = "on" ]; then
		printf '%03d' "$level"
	else
		printf '%s' " ⮝ "
	fi
}

song() {
	cur=$(mpc current | cut -c1-70)
	if [ -n "$cur" ]; then
		printf "%95s" "$cf⮕$ef $cur"
	else
		printf "%95s" "$cf⮕$ef empty"
	fi
}

desktop() {
	num_monitors=$(herbstclient list_monitors | wc -l)
	if [[ $num_monitors > 1 ]]; then
		desktop_name=$(herbstclient tag_status $1 | grep -o '[+#][0-9]' | cut -c2-)
		desktop_name=$(( desktop_name - 1 ))
	else
		desktop_name=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
	fi

	printf '%s' '%{A4:herbstclient use_index -1:}%{A5:herbstclient use_index +1:}'
	case "$desktop_name" in
		0) printf '%s' "$cf⮫$ef ⮬ ⮭ ⮮ ⮯";;
		1) printf '%s' "⮫ $cf⮬$ef ⮭ ⮮ ⮯";;
		2) printf '%s' "⮫ ⮬ $cf⮭$ef ⮮ ⮯";;
		3) printf '%s' "⮫ ⮬ ⮭ $cf⮮$ef ⮯";;
		4) printf '%s' "⮫ ⮬ ⮭ ⮮ $cf⮯$ef";;
	esac
	printf '%s' '%{A}%{A}'
}

#playstate() {
#	status=$(mpc status | grep "\[" | awk '{print $1}' | tail -1)
#
#	if [ "$status" = "[playing]" ]; then
#		printf '⮔'
#	else
#		printf '⮓'
#	fi
#}

playstate() {
	status=$(mpc status | grep "\[" | awk '{print $1}' | tail -1)

	if [ "$status" = "[playing]" ]; then
		echo "$cf"
	else
		echo ""
	fi
}

playperc() {
	status=$(mpc status | sed '2!d' | mawk '{ print $3 }' | tr ':/' ' ' | mawk '{ print $1*60+$2" "$3*60+$4 }')

	pos=$(echo "$status" | mawk '{ print $1 }')
	len=$(echo "$status" | mawk '{ print $2 }')

	clen=1
	s=' ▁▂▃▄▅▆▇█'
	#s='    █   ██  ███ ████'


	if [ -z $pos ]; then
		printf "${s:0:$clen}"
	else
		perc=$(( 1 + pos * (${#s} / clen - 1)  / (len + 1) ))

		#perc=$(( pos * ${#s} / (len + 1) ))

		printf "${s:$(( perc * clen )):$clen}"
	fi
}



handle() {
	while read data; do
		# gdb --batch-silent -ex "attach $$" -ex 'set bind_variable("a", "4", 0)';
		kill -USR2 $$ &
		# echo ayy
		case "$data" in
			ci) count_up;;
			cd) count_down;;
			cr) settmp inf_count 0;;
			+*|-*) tea_add "$data";;
			=*) settmp tea_time "$(echo $data | cut -c2-)";;
			tea_run) tt "$(gettmp tea_time)s";;
			*) echo "$data" | sh >/dev/null;;
		esac
	done
}

tea_add() {
	tea_time=$(gettmp tea_time)
	if [ $((tea_time + $1)) -lt 0 ]; then
		settmp tea_time 0;
	else
		settmp tea_time $((tea_time + $1));
	fi
}

count_up() {
	inf_count=$(gettmp inf_count)
	if [ $inf_count -lt 20 ]; then
		settmp inf_count $((inf_count + 1));
	fi
}

count_down() {
	inf_count=$(gettmp inf_count)
	if [ $inf_count  -gt 0 ]; then
		settmp inf_count $((inf_count - 1));
	fi
}

tea_gettime () {
	printf "%3ds" "$(gettmp tea_time)"
}

count() {
	c=$1

	while [ $c -ge 5 ]; do
		printf 'bbbb';
		c=$((c - 5))
		if [ $c -gt 0 ]; then
			printf ' ';
		fi
	done

	while [ $c -gt 0 ]; do
		printf 'a';
		c=$((c - 1))
	done
}

inf_count () {
	# u suck printf (or im stupid)
	printf "%-19s" "$(count $(gettmp inf_count))" | sed 's/a/│/g' | sed 's/b/┼/g'
}

batt () {
	bat=$(upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep percentage | mawk '{print $2}' | sed 's/%//' | sed 's/\..*$//')
	state=$(upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep state | awk '{print $2}')
	color="$cb"

	if [ "$state" = "charging" ] || [ "$state" = "fully-charged" ]; then
		color="$cb2";
	fi
		
	# s=' ▁▂▃▄▅▆▇█'
	#s='    █   ██  ███ ████'
	s="%$color%$eb          %$color %$eb         %$color  %$eb        %$color   %$eb       %$color    %$eb      %$color     %$eb     %$color      %$eb    %$color       %$eb   %$color        %$eb  %$color         %$eb %$color          %$eb"



	pos=$bat
	# pos=$(shuf -i 0-100 -n1)
	len=100

	clen=28
	printf "%$cb2 %$eb"
	if [ -z $pos ]; then
		printf "${s:0:$clen}"
	else
		perc=$(( 1 + pos * (${#s} / clen - 1)  / (len + 1) ))

		#perc=$(( pos * ${#s} / (len + 1) ))

		printf "${s:$(( perc * clen )):$clen}"
	fi
	printf "%$cb2 %$eb"
}

br_get() {
	printf "%02d" $(brightness get)
}

settmp tea_time 0
settmp inf_count 0
trap 'rmtmp tea_time; rmtmp inf_count;' INT TERM
trap 'update_counter=1000; echo ayy;' USR2

num_monitors=$(herbstclient list_monitors | wc -l)


while :; do
	if [[ $update_counter -gt 99 ]]; then
		lbuf=""
		lbuf="${lbuf}%{A:tea_run:} $(tea)⮖$ef $(clock)%{A}"
		# buf="${buf}%{O370}%{A3:=0:}$cf%{A:-15:} ▼%{A}%{A:-5:} ▽%{A}$ef%{A:+60:} $(tea_gettime) %{A}$cf%{A:+5:}△ %{A}%{A:+15:}▲ %{A}$ef%{A}"
		# buf="${buf}%{O370}$cf%{A:brightness dec 5:} - %{A}$ef$(br_get)$cf%{A:brightness inc 5:} + %{A}$ef"
		lbuf="${lbuf}"
		# buf="${buf}%{r}%{A:ci:}%{A3:cr:}$cf│$ef $(inf_count) $cf│$ef%{A}%{A}"
		rbuf=""
		rbuf="${rbuf}%{r}%{A4:brightness inc 5:}%{A5:brightness dec 5:}$(batt)%{A}%{A}"
		# buf="${buf}$(song)"
		# buf="${buf}$cf%{A:mpc prev:} ⮳%{A}%{A:mpc toggle:} $ef$(playstate)$(playperc) %{A}$cf%{A:mpc next:}⮲ %{A}$ef"
		rbuf="${rbuf} $cf%{A:vol -:} ⮟ %{A}$ef%{A:vol !:}%{A3:vol 50:} $(volume) %{A}%{A}$cf%{A:vol +:} ⮞ %{A}$ef"
		update_counter=0
	fi

	if [[ $num_monitors -gt 1 ]]; then
		echo " $lbuf%{c}$(desktop 1)$rbuf %{l}%{S+}$lbuf%{c}$(desktop 0)$rbuf"
	else
		echo " $lbuf%{c}$(desktop 1)$rbuf"
	fi
	sleep .5
	update_counter=$(( update_counter + 1 ))
done | tee /dev/stderr | bar | handle

#buf="${buf} $cf%{A:mpc toggle:}$(playstate) %{A}%{A:mpc prev:}⮳%{A} $(playperc) %{A:mpc next:}⮲ %{A}$ef"
#buf="${buf} %{F#a54242}%{A:vol -:} - %{A}%{F-} $(volume) %{F#21a11d}%{A:vol +:} + %{A}%{F-}"
#buf="${buf}  %{+u}%{B#a54242}%{A:ciao:} ⯉ %{A}%{B-}%{-u}"
